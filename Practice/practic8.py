print("БАЗОВІ ТИПИ ДАНИХ ТА МЕТОДИ В PYTHON")
data_types = {
    "str": "- тип даних - рядки (від англ. string — рядок)\n"
           "Значенням величини типу str є послідовність символів,\n"
           "яку у виразах беруть в одинарні або подвійні лапки.",
    "int": "- тип даних - чисел (від англ. integer - ціле число)\nпозитивні і негативні цілі числа,"
           " а також 0\n(наприклад, 4, 687, -45, 0)",
    "float": "- тип даних - чисел (від англ. floating - плаваючий)\nЧисла з плаваючою крапкою (float point)\n"
             "дробові числа (наприклад, 1.45, -3.789654, 0.00453)",
    "True": "- тип даних - логічний, одне із булевих значень\n(від англ. true - правда)"
            " Має індекс 1",
    "False": "тип даних - логічний, одне із булевих значень\n(від англ. false - брехня) "
             " Має індекс 0",
    "list": "- тип даних - послідовності (від англ. list - список)\nце послідовність елементів."
            " Елементами списку є значення\n"
            "причому значення можуть бути різних типів.",
    "tuple": "- тип даних - послідовності (від англ. tuple - кортеж)\nЦе послідовність елементів будь-яких типів."
             "\nКортеж записується майже так само,"
             "як список\nале замість квадратних дужок використовуються круглі.",
    "range": "- тип даних - послідовності (від англ. range - діапазон)\nЯвляє собою послідовність цілих чисел"
             " у певному діапазоні.\nСтворити діапазон можна за допомогою функції range()."
             "\nПершим параметром цієї функції є початкове значення діапазону чисел,"
             "\nце число буде включено у послідовність цілих чисел.\nДругий параметр — кінцеве значення діапазону"
             "\nце число не буде включене у послідовність.",
    "dict": "- тип даних - словники ( від англ. dictionary - словник)\nСловники — це невпорядковані набори"
            " пар ключ - значення.\nКоли ви додаєте до словника новий ключ, завжди також повинні"
            " додати туди і значення (яке можна буде змінити пізніше).\nСловники оптимізовані для"
            " отримання значення\nякщо ви знаєте відповідний ключ, але ніяк не навпаки."
            "\nЩоб створити словник, треба у фігурних дужках перерахувати пари ключ - значення."
            "\nУ парі ключ від значення відділяють двокрапкою. Якщо таких пар більше однієї, їх розділяють комою.",
    "type": "- це функція, (не пишеться через крапку, після неї в круглих дужках"
            " передаємо змінну\nабо інформацію яку обробляємо: type() - це функція.",
    "print": "- це функція, (не пишеться через крапку, після неї в круглих дужках"
             " передаємо змінну\nабо інформацію яку обробляємо: print() - це функція.",
    "input": "\nце функція, (не пишеться через крапку, після неї в круглих дужках"
             " передаємо змінну\nабо інформацію яку обробляємо: input() - це функція."
}

methods = {
    "append": "- це метод (від англ. append - додати)\nМетод append() використовується для додавання елементу до "
              "списку. "
              "\nМетод може отримувати тільки один параметр.\nПараметром методу може бути будь-який об’єкт:"
              " число, рядок, список і т.д.",
    "extend": "- це метод (від англ. extend - розширити)\nДаний метод extend() дозволяє розширити список."
              "\nВхідним параметром методу є інший список, який додається до даного.\nСписок розширення може"
              "бути іменованим об’актом або списком, взятим у квадратні дужки [ ]",
    "insert": "- це метод (від англ. insert - вставити)\nМетод insert() дозволяє вставити новий елемент в список з"
              " заданої позиції.\nМетод отримує два параметри. Перший параметр – позиція вставки, яка нумерується з 0."
              " Другий параметр – ім’я об’єкту (значення), яке вставляється: <твоя змінна>.insert()",
    "index": "- це метод (від англ. index - індекс)\nМетод index() дозволяє отримати значення індексу (позиції),"
             " заданого елементу списку.\nМетод отримує 1 параметр, який є шуканим елементом.\nЗначення індексу, що"
             " відповідає першому елементу списку, рівне 0",
    "count": "- це метод (від англ. count - рахувати)\nМетод count() повертає кількість входжень\nзаданого"
             " елементу в списку. Метод отримує один параметр.",

}
while True:
    data_check = input("\nВведіть тип даних, або методи про які ви хочете дізнатися у Python: ")

    if data_check in data_types:
        print(data_check, data_types[data_check])
    for d in data_types:
        if data_check == "all data":
            print(d)
    if data_check in methods:
        print(data_check, methods[data_check])
    for m in methods:
        if data_check == "all method":
            print(m)
            break
        else:
            print("Error")
